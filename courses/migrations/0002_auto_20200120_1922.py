# Generated by Django 2.2.8 on 2020-01-20 16:22

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('profiles', '0006_profile_profile_views'),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MaterialProblemTypeSandbox',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(help_text='Name', max_length=2048, validators=[django.core.validators.MinLengthValidator(3)])),
                ('slug', models.SlugField(blank=True, max_length=1536, null=True, unique=True)),
                ('slug_prefix', models.SlugField(blank=True, max_length=1536, null=True)),
                ('slug_suffix', models.PositiveIntegerField(null=True)),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Position')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('version', models.IntegerField(default=1)),
                ('git', models.URLField(blank=True, null=True)),
                ('external_resources', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('npm_dependencies', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('is_sse', models.BooleanField(blank=True, default=False, null=True)),
                ('entry', models.TextField()),
                ('screenshot_url', models.URLField(blank=True, null=True)),
                ('picks', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('template', models.TextField(default='create-react-app')),
                ('description', models.TextField(blank=True, null=True)),
                ('custom_template', models.TextField(blank=True, null=True)),
                ('forked_template', models.TextField(blank=True, null=True)),
                ('is_frozen', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Profile')),
                ('forked_from_sandbox', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.MaterialProblemTypeSandbox')),
                ('last_edit_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses_materialproblemtypesandbox_last_edit_items', to='profiles.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialProblemTypeSandboxDirectory',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(help_text='Name', max_length=2048, validators=[django.core.validators.MinLengthValidator(3)])),
                ('slug', models.SlugField(blank=True, max_length=1536, null=True, unique=True)),
                ('slug_prefix', models.SlugField(blank=True, max_length=1536, null=True)),
                ('slug_suffix', models.PositiveIntegerField(null=True)),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Position')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Profile')),
                ('directory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='courses.MaterialProblemTypeSandboxDirectory')),
                ('last_edit_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses_materialproblemtypesandboxdirectory_last_edit_items', to='profiles.Profile')),
                ('sandbox', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='directories', to='courses.MaterialProblemTypeSandbox')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='author',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='created_on',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='last_edit_user',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='name',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='position',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='slug',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='slug_prefix',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='slug_suffix',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='title',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='updated_on',
        ),
        migrations.RemoveField(
            model_name='materialproblemtype',
            name='uuid',
        ),
        migrations.AddField(
            model_name='materialproblemtype',
            name='official',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='MaterialProblemTypeSandboxModule',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(help_text='Name', max_length=2048, validators=[django.core.validators.MinLengthValidator(3)])),
                ('slug', models.SlugField(blank=True, max_length=1536, null=True, unique=True)),
                ('slug_prefix', models.SlugField(blank=True, max_length=1536, null=True)),
                ('slug_suffix', models.PositiveIntegerField(null=True)),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Position')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('code', models.TextField()),
                ('is_binary', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.Profile')),
                ('directory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='directories', to='courses.MaterialProblemTypeSandboxDirectory')),
                ('last_edit_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses_materialproblemtypesandboxmodule_last_edit_items', to='profiles.Profile')),
                ('sandbox', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.MaterialProblemTypeSandbox')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialProblemTypeSandboxCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.URLField()),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('sandbox', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cache', to='courses.MaterialProblemTypeSandbox')),
            ],
        ),
        migrations.AddField(
            model_name='materialproblemtype',
            name='materialproblemtypesandbox_ptr',
            field=models.OneToOneField(auto_created=True, default=1, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='courses.MaterialProblemTypeSandbox'),
            preserve_default=False,
        ),
    ]
